/*
 * Created on 2018-04-23 ( Date ISO 2018-04-23 - Time 14:27:32 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */

package org.demo.persistence.impl.jdbc;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Named;

import org.demo.data.record.MemberHumorRecord;
import org.demo.data.record.TeamHumor;
import org.demo.enumeration.Humor;
import org.demo.persistence.TeamHumorPersistence;
import org.demo.persistence.impl.jdbc.commons.TeamHumorJdbcDAO;

/**
 * MemberHumor persistence implementation
 * 
 * @author Telosys
 *
 */
@Named("MemberHumorPersistence")
public class TeamHumorPersistenceJdbc extends TeamHumorJdbcDAO<MemberHumorRecord> implements TeamHumorPersistence {

	/**
	 * DAO constructor
	 */
	public TeamHumorPersistenceJdbc() {
		super();
	}

	// ----------------------------------------------------------------------
	@Override
	protected MemberHumorRecord newInstance() {
		return new MemberHumorRecord();
	}

	/**
	 * Calculate average humor level of a team
	 * 
	 * @return teamHumor bean
	 */
	@Override
	public TeamHumor calculateTeamHumor(String day) {

		// List all humors registered for the day
		ArrayList<String> humorValues = super.doCalculateTeamHumor(day);

		// Calculate average humor for the day
		double humorTotal = 0.0;
		double averageHumorValue = 0.0;
		int roundHumorValue = 0;

		if (!humorValues.isEmpty()) {
			for (String humorValue : humorValues) {
				Float humorValueInt = Float.parseFloat(humorValue);
				humorTotal += humorValueInt;
			}
			averageHumorValue = humorTotal / humorValues.size();
			roundHumorValue = (int) Math.round(averageHumorValue);
		}

		// Implement teamHumor bean
		TeamHumor teamHumor = new TeamHumor();
		teamHumor.setDay(day);
		teamHumor.setValuesNumber(humorValues.size());
		teamHumor.setTeamHumorValue(roundHumorValue);
		teamHumor.setTeamHumorText(giveTeamHumorText(roundHumorValue));

		return teamHumor;
	}

	// ----------------------------------------------------------------------
	/**
	 * Return humor text for a specific humor level (int)
	 * 
	 * @return string
	 */
	@Override
	public String giveTeamHumorText(Integer averageTeamHumor) {
		// List all humors defined in the Humor enumeration
		List<Integer> humorList = Humor.getValues();

		// Return index of the closest humor of the humor put as parameter
		double distance = Math.abs(humorList.get(0) - averageTeamHumor);
		int idx = 0;
		for (int indexList = 0; indexList < humorList.size(); indexList++) {
			double cDistance = Math.abs(humorList.get(indexList) - averageTeamHumor);
			if (cDistance < distance) {
				idx = indexList;
				distance = cDistance;
			}
		}
		int humorRightValue = humorList.get(idx);

		// Give text corresponding to the humor value
		String teamHumortext = null;

		for (Humor Enum : Humor.values()) {
			if (humorRightValue == Enum.getHumorValue()) {
				teamHumortext = Enum.getHumorLevel();
			}
		}

		return teamHumortext;
	}

	// ----------------------------------------------------------------------
	protected String getSqlTeamHumor(String day) {
		String SqlTeamHumor = "SELECT * FROM MEMBER_HUMOR WHERE DAY = {d '" + day + "'}";
		return SqlTeamHumor;
	}
}
