/*
 * Created on 2018-04-16 ( Date ISO 2018-04-16 - Time 11:56:07 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */
package org.demo.persistence.impl.fake;

import java.util.List;


import javax.inject.Named;

import org.demo.data.record.UserRecord;
import org.demo.persistence.UserPersistence;
import org.demo.persistence.impl.fake.commons.GenericFakeDAO;

/**
 * User persistence service - FAKE implementation 
 * 
 * @author Telosys
 *
 */
@Named("UserPersistence")
public class UserPersistenceFake extends GenericFakeDAO<UserRecord> implements UserPersistence {

	/**
	 * Constructor
	 */
	public UserPersistenceFake() {
		super(UserRecord.class);
	}

	/**
	 * Creates a new bean instance and set its primary key value(s)
	 * 
	 * @param id
	 * @return the new instance
	 */
	private UserRecord newInstanceWithPrimaryKey(Integer id) {
		UserRecord record = new UserRecord();
        record.setId(id); 
		return record;
	}

	//-------------------------------------------------------------------------------------
	// Generic DAO abstract methods implementations
	//-------------------------------------------------------------------------------------
	@Override
	protected String getKey(UserRecord record) {
		return buildKeyString(record.getId());
	}
	
	@Override
	protected void setAutoIncrementedKey(UserRecord record, long value) {
		throw new IllegalStateException("Unexpected call to method 'setAutoIncrementedKey'");
	}

	//-------------------------------------------------------------------------------------
	// Persistence interface implementations
	//-------------------------------------------------------------------------------------
	@Override
	public long countAll() {
		return super.doCountAll();
	}
	
	@Override
	public UserRecord create(UserRecord record) {
		super.doCreate(record);
		return record;
	}

	@Override
	public boolean delete(UserRecord record) {
		return super.doDelete(record);
	}

	@Override
	public boolean deleteById(Integer id) {
		UserRecord record = newInstanceWithPrimaryKey(id);
		return super.doDelete(record);
	}

	@Override
	public boolean exists(UserRecord record) {
		return super.doExists(record);
	}

	@Override
	public boolean exists(Integer id) {
		UserRecord record = newInstanceWithPrimaryKey(id);
		return super.doExists(record);
	}

	@Override
	public List<UserRecord> findAll() {
		return super.doFindAll();
	}

	@Override
	public UserRecord findById(Integer id) {
        UserRecord record = newInstanceWithPrimaryKey(id);
		return super.doFind(record);
	}

	@Override
	public UserRecord save(UserRecord record) {
		if (super.doExists(record)) {
			super.doUpdate(record);
		} else {
			super.doCreate(record);
		}
        return record;
	}

	@Override
	public boolean update(UserRecord record) {
		return super.doUpdate(record);	
	}
}
