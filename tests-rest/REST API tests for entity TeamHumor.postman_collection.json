{
	"info": {
		"_postman_id": "b44e89f3-7b7b-4c37-b588-3c77390adbba",
		"name": "REST API tests for entity TeamHumor",
		"description": "PostMan tests generated by Telosys",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AVERAGE HUMOR SPECIFIC DAY",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c2efdcf-f19f-4cf4-b687-59d9895c6398",
						"type": "text/javascript",
						"exec": [
							"// Test if response code is 200 or 404",
							"tests[\"Status code is 200 or 404\"] = ( responseCode.code === 200 || responseCode.code === 404 ) ;",
							"",
							"if ( responseCode.code === 200 ) {",
							"// 200 OK (found) => Body expected in the response",
							"tests[\"200 => Has Content-Type\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"200 => Content-Type is application/json\"] = responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"tests[\"200 => Has body\"] = responseBody ;",
							"tests[\"200 => Body is valid JSON \"] = JSON.parse(responseBody) ;",
							"}",
							"",
							"if ( responseCode.code === 404 ) {",
							"// 404 NOT FOUND => No body expected in the response",
							"tests[\"404 => Content-Length is ZERO\"] = responseHeaders[\"Content-Length\"].has(\"0\");",
							"tests[\"404 => No body\"] = ( ! responseBody ) ;",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/BackendDojo/api/v1/teamHumor/2018-04-05",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"BackendDojo",
						"api",
						"v1",
						"teamHumor",
						"2018-04-05"
					]
				},
				"description": "FIND ALL with GET method"
			},
			"response": []
		},
		{
			"name": "AVERAGE HUMOR CURRENT DAY",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c12ffebe-07ef-4828-822d-9d5f57dde4c5",
						"type": "text/javascript",
						"exec": [
							"// Test if response code is 200 or 404",
							"tests[\"Status code is 200 or 404\"] = ( responseCode.code === 200 || responseCode.code === 404 ) ;",
							"",
							"if ( responseCode.code === 200 ) {",
							"// 200 OK (found) => Body expected in the response",
							"tests[\"200 => Has Content-Type\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"200 => Content-Type is application/json\"] = responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"tests[\"200 => Has body\"] = responseBody ;",
							"tests[\"200 => Body is valid JSON \"] = JSON.parse(responseBody) ;",
							"}",
							"",
							"if ( responseCode.code === 404 ) {",
							"// 404 NOT FOUND => No body expected in the response",
							"tests[\"404 => Content-Length is ZERO\"] = responseHeaders[\"Content-Length\"].has(\"0\");",
							"tests[\"404 => No body\"] = ( ! responseBody ) ;",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/BackendDojo/api/v1/teamHumor/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"BackendDojo",
						"api",
						"v1",
						"teamHumor",
						""
					]
				},
				"description": "FIND ALL with GET method"
			},
			"response": []
		}
	]
}